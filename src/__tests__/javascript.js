describe('Javascript assertions', function() {
  it( "javascript", function() {
    expect(typeof null === 'object').toBeTruthy() // beware
    expect(typeof undefined === 'object').toBeFalsy()
    expect("1"*1).toEqual(1)
    expect("1"*"1").toEqual(1)
    expect("string"*1).toBeNaN()
    expect("string"*"string").toBeNaN()
    expect("1string"*1).toBeNaN()
    expect(""*1).toEqual(0)
    expect(false*1).toEqual(0)
    expect(null*1).toEqual(0)
    expect(NaN*1).toBeNaN()
    expect(isNaN(1)).toBeFalsy()
    expect(isNaN(0)).toBeFalsy()
    expect(isNaN("1")).toBeFalsy()
    expect(isNaN("0")).toBeFalsy()
    expect(isNaN('')).toBeFalsy()
    expect(isNaN(false)).toBeFalsy()
    expect(isNaN(null)).toBeFalsy()
    expect(isNaN(NaN)).toBeTruthy()
    expect(undefined?true:false).toBeFalsy()
    expect(null?true:false).toBeFalsy()
    expect(!null?true:false).toBeTruthy()
    expect(0?true:false).toBeFalsy()
    expect(''?true:false).toBeFalsy()
    expect('0'?true:false).toBeTruthy()
    expect({}?true:false).toBeTruthy()
  })
  it( "numbers", function() {
    expect(Number('10')).toEqual(10)
    expect (Number('version')).toBeNaN()
    expect(Number(10)).toEqual(10)
    expect(Math.max(...Object.keys({1:1,'3':3,version:1}).filter(x=>!isNaN(x)))).toEqual(3)
  })

})
